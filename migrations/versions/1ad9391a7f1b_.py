"""empty message

Revision ID: 1ad9391a7f1b
Revises: beeab36df702
Create Date: 2017-03-18 12:09:12.517205

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1ad9391a7f1b'
down_revision = 'beeab36df702'
branch_labels = None
depends_on = None


def upgrade():

    ## DOING A BLANK UPGRADE FOR NOW, SANITY ERROR CHECK FOR JOSIE 
    pass

    # # Step 1 - drop old unique index for houses (it wasn't actually unique)
    # op.drop_unique_constraint('uq_Houses_Latitude_Longitude_Address2', table_name='Houses', schema='OurHouse')
    # op.drop_index('ix_Houses_Latitude_Longitude_Address2', table_name='Houses', schema='OurHouse')

    # # Step 2 - create new unique index for houses
    # op.create_unique_constraint('uq_Houses_Latitude_Longitude_Address1_Address2', 'Houses', ['Latitude', 'Longitude', 'Address1', 'Address2'], schema='OurHouse')
    # op.create_index('ix_Houses_Latitude_Longitude_Address1_Address2', 'Houses', ['Latitude', 'Longitude', 'Address1', 'Address2'], unique=True, schema='OurHouse')

    # # Step 3 - add new columns 'DateAvailable' and 'LeaseTerm' to houses
    # # op.create_column 
    # # sa.Column('DateAvailable', sa.Date(), nullable=True)
    # # sa.Column('LeaseTerm', sa.SmallInteger(), nullable=True)    



    # # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('Landlords',
    # sa.Column('Id', sa.Integer(), server_default=FetchedValue(), nullable=False),
    # sa.Column('FirstName', sa.String(length=50), nullable=False),
    # sa.Column('LastName', sa.String(length=50), nullable=False),
    # sa.Column('Email', sa.String(length=62), nullable=False),
    # sa.Column('Phone', sa.String(length=10), nullable=False),
    # sa.Column('IsActive', sa.Boolean(), nullable=False),
    # sa.Column('CreatedAt', sa.DateTime(timezone=True), nullable=False),
    # sa.Column('UpdatedAt', sa.DateTime(timezone=True), nullable=False),
    # sa.PrimaryKeyConstraint('Id'),
    # sa.UniqueConstraint('Email'),
    # schema='OurHouse'
    # )
    # op.create_index('ix_Landlords_Email', 'Landlords', ['Email'], unique=False, schema='OurHouse')
    # op.create_table('Students',
    # sa.Column('Id', sa.Integer(), server_default=FetchedValue(), nullable=False),
    # sa.Column('FirstName', sa.String(length=50), nullable=False),
    # sa.Column('LastName', sa.String(length=50), nullable=False),
    # sa.Column('Email', sa.String(length=62), nullable=False),
    # sa.Column('Phone', sa.String(length=10), nullable=False),
    # sa.Column('IsActive', sa.Boolean(), nullable=False),
    # sa.Column('CreatedAt', sa.DateTime(timezone=True), nullable=False),
    # sa.Column('UpdatedAt', sa.DateTime(timezone=True), nullable=False),
    # sa.PrimaryKeyConstraint('Id'),
    # sa.UniqueConstraint('Email'),
    # sa.UniqueConstraint('Email'),
    # schema='OurHouse'
    # )
    # op.create_index('ix_Students_Email', 'Students', ['Email'], unique=False, schema='OurHouse')
    # op.create_table('Houses',
    # sa.Column('Id', sa.Integer(), server_default=FetchedValue(), nullable=False),
    # sa.Column('LandlordId', sa.Integer(), nullable=False),
    # sa.Column('Address1', sa.String(length=120), nullable=False),
    # sa.Column('Address2', sa.String(length=120), nullable=True),
    # sa.Column('City', sa.String(length=100), nullable=False),
    # sa.Column('State', sa.String(length=2), nullable=False),
    # sa.Column('Zipcode', sa.String(length=5), nullable=False),
    # sa.Column('Rooms', sa.Integer(), nullable=False),
    # sa.Column('ParkingSpots', sa.Integer(), server_default=FetchedValue(), nullable=False),
    # sa.Column('MonthlyRent', sa.Integer(), nullable=False),
    # sa.Column('UtilitiesIncluded', sa.Boolean(), nullable=False),
    # sa.Column('Laundry', sa.Boolean(), nullable=False),
    # sa.Column('Pets', sa.Boolean(), nullable=False),
    # sa.Column('Latitude', sa.Numeric(), nullable=False),
    # sa.Column('Longitude', sa.Numeric(), nullable=False),
    # sa.Column('DistFromCC', sa.Float(), nullable=False),
    # sa.Column('DateAvailable', sa.Date(), nullable=True),
    # sa.Column('LeaseTerm', sa.SmallInteger(), nullable=True),
    # sa.ForeignKeyConstraint(['LandlordId'], [u'OurHouse.Landlords.Id'], ),
    # sa.PrimaryKeyConstraint('Id'),
    # sa.UniqueConstraint('Latitude', 'Longitude', 'Address1', 'Address2'),
    # schema='OurHouse'
    # )
    # op.create_index('ix_Houses_Latitude_Longitude_Address1_Address2', 'Houses', ['Latitude', 'Longitude', 'Address1', 'Address2'], unique=False, schema='OurHouse')
    # op.create_index(op.f('ix_OurHouse_Houses_LandlordId'), 'Houses', ['LandlordId'], unique=False, schema='OurHouse')
    # op.create_table('Reviews',
    # sa.Column('Id', sa.Integer(), server_default=FetchedValue(), nullable=False),
    # sa.Column('HouseId', sa.Integer(), nullable=False),
    # sa.Column('StudentId', sa.Integer(), nullable=False),
    # sa.Column('Stars', sa.String(), nullable=False),
    # sa.Column('Comment', sa.String(length=2048), nullable=True),
    # sa.ForeignKeyConstraint(['HouseId'], [u'OurHouse.Houses.Id'], ),
    # sa.ForeignKeyConstraint(['StudentId'], [u'OurHouse.Students.Id'], ),
    # sa.PrimaryKeyConstraint('Id'),
    # schema='OurHouse'
    # )
    # op.create_index(op.f('ix_OurHouse_Reviews_HouseId'), 'Reviews', ['HouseId'], unique=False, schema='OurHouse')
    # op.create_index(op.f('ix_OurHouse_Reviews_StudentId'), 'Reviews', ['StudentId'], unique=False, schema='OurHouse')
    # # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_OurHouse_Reviews_StudentId'), table_name='Reviews', schema='OurHouse')
    op.drop_index(op.f('ix_OurHouse_Reviews_HouseId'), table_name='Reviews', schema='OurHouse')
    op.drop_table('Reviews', schema='OurHouse')
    op.drop_index(op.f('ix_OurHouse_Houses_LandlordId'), table_name='Houses', schema='OurHouse')
    op.drop_index('ix_Houses_Latitude_Longitude_Address1_Address2', table_name='Houses', schema='OurHouse')
    op.drop_table('Houses', schema='OurHouse')
    op.drop_index('ix_Students_Email', table_name='Students', schema='OurHouse')
    op.drop_table('Students', schema='OurHouse')
    op.drop_index('ix_Landlords_Email', table_name='Landlords', schema='OurHouse')
    op.drop_table('Landlords', schema='OurHouse')
    # ### end Alembic commands ###
